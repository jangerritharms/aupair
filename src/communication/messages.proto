syntax = "proto2";

enum Type {
    REGISTER = 1;
    AGENT_REPLY = 2;
    AGENT_REQUEST = 3;
    UNREGISTER = 4;
    BLOCK_PROPOSAL = 5;
    BLOCK_AGREEMENT = 6;
    PROTECT_CHAIN = 7;
    PROTECT_BLOCKS_REQUEST = 8;
    PROTECT_BLOCKS_REPLY = 9;
    PROTECT_CHAIN_BLOCKS = 10;
    PROTECT_BLOCK_PROPOSAL = 11;
    PROTECT_BLOCK_AGREEMENT = 12;
    PROTECT_REJECT = 13;
    PROTECT_INDEX_REQUEST = 14;
    PROTECT_INDEX_REPLY = 15;
    PROTECT_EXCHANGE_REQUEST = 16;
    PROTECT_EXCHANGE_REPLY = 17;
}

message Empty {}

message AgentInfo {
    required string public_key = 1;
    required string address = 2;
    required string type = 3;
}

message Register {
    required AgentInfo agent = 1;
}

message Unregister {
    required AgentInfo agent = 1;
}

message AgentReply {
    repeated AgentInfo agents = 1; 
}

message WrapperMessage{
    required Type type = 1;
    required string address = 2;
    
    oneof msg {
        Empty empty = 10;
        Register register = 11;
        AgentReply agent_reply = 12;
        Unregister unregister = 13;
        Block block = 14;
        Database db = 15;
        BlockIndex index = 16;
        ChainAndBlocks chain_index = 17;
        ExchangeIndex ex_index = 18;
        ExchangeRequest ex_hash = 19;
    }
}

message Block {
    required bytes payload = 1;
    required bytes public_key = 2;
    required int32 sequence_number = 3;
    required bytes link_public_key = 4;
    required int32 link_sequence_number = 5;
    required bytes previous_hash = 6;
    required bytes signature = 7;
    optional bytes hash = 8;
}

message Database {
    required AgentInfo info = 1;
    repeated Block blocks = 2;
}

message ExchangeIndexEntry {
    required bytes block_hash = 1;
    required BlockIndex index = 2;
}

message ExchangeIndex {
    repeated ExchangeIndexEntry entries = 1;
}

message BlockIndexEntry {
    required bytes public_key = 1;
    repeated int32 sequence_numbers = 2;
}

message BlockIndex {
    repeated BlockIndexEntry entries = 1;
}

message ChainAndBlocks {
    repeated Block chain = 1;
    repeated Block blocks = 2;
    required ExchangeIndex exchange = 3;
}

message ExchangeRequest {
    required bytes exchange_hash = 1;
}